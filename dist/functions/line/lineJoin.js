"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _forgescript=require("@tryforge/forgescript");const _=require("../..");const _default=new _forgescript.NativeFunction({name:"$lineJoin",description:"Sets or returns the line join shape in a canvas.",version:"1.0.0",brackets:false,unwrap:true,args:[{name:"canvas",description:"Name of the canvas.",type:_forgescript.ArgType.String,required:false,rest:false},{name:"shape",description:"The new shape.",type:_forgescript.ArgType.Enum,enum:_.LineJoinShape,required:false,rest:false}],execute(ctx,[name,shape]){const canvas=(name?ctx.canvasManager?.get(name):ctx.canvasManager?.lastCurrent)?.ctx;if(!canvas)return this.customError(_.FCError.NoCanvas);return this.success(shape?(canvas.lineJoin=typeof shape==="number"?_.LineJoinShape[shape]:shape,undefined):canvas.lineJoin)}});
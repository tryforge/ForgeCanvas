"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _forgescript=require("@tryforge/forgescript");const _classes=require("../../classes");const _default=new _forgescript.NativeFunction({name:"$arcTo",description:"Adds a circular arc in the current path.",version:"1.0.0",brackets:true,unwrap:true,args:[{name:"canvas",description:"Name of the canvas.",type:_forgescript.ArgType.String,required:false,rest:false},{name:"x1",description:"The X coordinate of the arc's start point.",type:_forgescript.ArgType.Number,required:true,rest:false},{name:"y1",description:"The Y coordinate of the arc's start point.",type:_forgescript.ArgType.Number,required:true,rest:false},{name:"x2",description:"The X coordinate of the arc's end point.",type:_forgescript.ArgType.Number,required:true,rest:false},{name:"y2",description:"The Y coordinate of the arc's end point.",type:_forgescript.ArgType.Number,required:true,rest:false},{name:"radius",description:"The arc's radius. Must be non-negative.",type:_forgescript.ArgType.Number,required:true,rest:false}],execute(ctx,[name,x1,y1,x2,y2,r]){const canvas=name?ctx.canvasManager?.get(name):ctx.canvasManager?.lastCurrent;if(!canvas)return this.customError(_classes.FCError.NoCanvas);canvas.ctx.arcTo(x1,y1,x2,y2,r);return this.success()}});
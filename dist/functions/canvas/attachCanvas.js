"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _forgescript=require("@tryforge/forgescript");const _discord=require("discord.js");const _=require("../..");const _default=new _forgescript.NativeFunction({name:"$attachCanvas",aliases:["$sendCanvas","$renderCanvas","$canvasRender"],description:"Attaches the canvas.",version:"1.0.0",brackets:true,unwrap:true,args:[{name:"canvas",description:"Name of the canvas.",type:_forgescript.ArgType.String,required:true,rest:false},{name:"filename",description:"The name with the extension of the image to be attached as.",type:_forgescript.ArgType.String,required:false,rest:false},{name:"format",description:"The image format.",type:_forgescript.ArgType.Enum,enum:_.ImageFormat,required:false,rest:false}],execute(ctx,[name,filename,f]){const canvas=ctx.canvasManager?.get(name);if(!canvas)return this.customError(_.FCError.NoCanvas);ctx.container.files.push(new _discord.AttachmentBuilder(canvas.buffer(f!==null?"image/"+(typeof f==="number"?_.ImageFormat[f]:f):"image/png"),{name:filename??`${name}.png`}));return this.success()}});
"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _forgescript=require("@tryforge/forgescript");const _=require("../..");const _default=new _forgescript.NativeFunction({name:"$canvasBuffer",description:"Returns buffer of a canvas.",version:"1.2.0",brackets:false,unwrap:true,args:[{name:"canvas",description:"Name of the canvas.",type:_forgescript.ArgType.String,required:false,rest:false},{name:"format",description:"The image format.",type:_forgescript.ArgType.Enum,enum:_.ImageFormat,required:false,rest:false}],execute(ctx,[name,f]){const canvas=name?ctx.canvasManager?.get(name):ctx.canvasManager?.lastCurrent;if(!canvas)return this.customError(_.FCError.NoCanvas);return this.success(`[${Array.from(canvas.buffer(f!==null?"image/"+(typeof f==="number"?_.ImageFormat[f]:f):"image/png")).join(", ")}]`)}});
"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _forgescript=require("@tryforge/forgescript");const _=require("../..");const _default=new _forgescript.NativeFunction({name:"$canvasSize",aliases:["$canvasDimensions"],description:"Returns canvas size.",version:"1.1.0",brackets:false,unwrap:true,args:[{name:"canvas",description:"Name of the canvas.",type:_forgescript.ArgType.String,required:false,rest:false},{name:"property",description:"The size property to return.",type:_forgescript.ArgType.Enum,enum:_.WidthOrHeight,required:false,rest:false}],execute(ctx,[name,property]){const canvas=name?ctx.canvasManager?.get(name):ctx.canvasManager?.lastCurrent;if(!canvas)return this.customError(_.FCError.NoCanvas);return this.success(property!==null?canvas[_.WidthOrHeight[typeof property==="string"?_.WidthOrHeight[property]:property]]:JSON.stringify({width:canvas.width,height:canvas.height}))}});
"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _forgescript=require("@tryforge/forgescript");const _classes=require("../../classes");const _default=new _forgescript.NativeFunction({name:"$opacity",aliases:["$globalAlpha","$alpha"],description:"Sets or returns the opacity in a canvas.",version:"1.0.0",brackets:false,unwrap:true,args:[{name:"canvas",description:"Name of the canvas.",type:_forgescript.ArgType.String,required:false,rest:false},{name:"opacity",description:"The new opacity.",type:_forgescript.ArgType.Number,required:false,rest:false}],execute(ctx,[name,opacity]){const canvas=(name?ctx.canvasManager?.get(name):ctx.canvasManager?.lastCurrent)?.ctx;if(!canvas)return this.customError(_classes.FCError.NoCanvas);return this.success(opacity?(canvas.globalAlpha=opacity/100,undefined):canvas.globalAlpha)}});
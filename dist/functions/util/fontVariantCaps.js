"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _forgescript=require("@tryforge/forgescript");const _=require("../..");const _default=new _forgescript.NativeFunction({name:"$fontVariantCaps",aliases:["$fontCaps"],description:"Sets or returns the capitalization of the text.",version:"1.1.0",brackets:false,unwrap:true,args:[{name:"canvas",description:"Name of the canvas.",type:_forgescript.ArgType.String,required:false,rest:false},{name:"type",description:"The new alternative capitalization.",type:_forgescript.ArgType.Enum,enum:_.FontVariantCaps,required:false,rest:false}],execute(ctx,[name,t]){const canvas=(name?ctx.canvasManager?.get(name):ctx.canvasManager?.lastCurrent)?.ctx;if(!canvas)return this.customError(_.FCError.NoCanvas);return this.success(t!==null?(canvas.fontVariantCaps=typeof t==="number"?_.FontVariantCaps[t]:t,undefined):canvas.fontVariantCaps)}});
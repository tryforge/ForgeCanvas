"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _forgescript=require("@tryforge/forgescript");const _=require("../..");const _default=new _forgescript.NativeFunction({name:"$rectAlign",aliases:["$alignRect","$alignImage","$imageAlign"],description:"Sets or returns the rect/image align.",version:"1.2.0",brackets:false,unwrap:true,args:[{name:"canvas",description:"Name of the canvas.",type:_forgescript.ArgType.String,required:false,rest:false},{name:"align",description:"The new align.",type:_forgescript.ArgType.Enum,enum:_.RectAlign,required:false,rest:false}],execute(ctx,[name,align]){const canvas=name?ctx.canvasManager?.get(name):ctx.canvasManager?.lastCurrent;if(!canvas)return this.customError(_.FCError.NoCanvas);return this.success(align!==null?(canvas.customProperties.rectAlign=typeof align==="number"?_.RectAlign[align]:align,undefined):typeof canvas.customProperties?.rectAlign==="number"?_.RectAlign[canvas.customProperties.rectAlign]:canvas.customProperties?.rectAlign??"left")}});
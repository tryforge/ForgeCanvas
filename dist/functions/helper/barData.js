"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _forgescript=require("@tryforge/forgescript");const _=require("../..");const _default=new _forgescript.NativeFunction({name:"$barData",description:"Adds data for progress bars.",version:"1.2.0",brackets:true,unwrap:true,args:[{name:"value",description:"Value for the data segment (percentage or absolute).",type:_forgescript.ArgType.String,required:true,rest:false},{name:"style",description:"Style for the data segment.",type:_forgescript.ArgType.String,required:true,rest:false}],execute(ctx,[value,style]){const numericValue=Number.parseFloat(value);if(Number.isNaN(numericValue)||numericValue<0)return this.customError(_.FCError.InvalidBarData);const barData=ctx.getEnvironmentKey("progressBarData")||[];barData.push({value:numericValue,style});ctx.setEnvironmentKey("progressBarData",barData);return this.success()}});
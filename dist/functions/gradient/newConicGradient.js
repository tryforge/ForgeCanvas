"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _forgescript=require("@tryforge/forgescript");const _=require("../..");const _default=new _forgescript.NativeFunction({name:"$newConicGradient",aliases:["$createConicGradient","$conicGradient"],description:"Creates a conic gradient.",version:"1.0.0",brackets:true,unwrap:true,args:[{name:"name",description:"Name of the new gradient.",type:_forgescript.ArgType.String,required:true,rest:false},{name:"start",description:"The angle at which to begin the gradient, in radians. The angle starts from a line going horizontally right from the center, and proceeds clockwise.",type:_forgescript.ArgType.Number,required:true,rest:false},{name:"x",description:"The X coordinate of the center of the gradient.",type:_forgescript.ArgType.Number,required:true,rest:false},{name:"y",description:"The Y coordinate of the center of the gradient.",type:_forgescript.ArgType.Number,required:true,rest:false},{name:"stops",description:"Color stops.",type:_forgescript.ArgType.Number,required:false,rest:true}],execute(ctx,[name,sAngle,x,y]){if(!ctx.gradientManager||!(ctx.gradientManager instanceof _.GradientManager))ctx.gradientManager=new _.GradientManager;ctx.gradientManager.set(name,_.GradientType.conic,sAngle,x,y);for(const stop of ctx.gradientManager.stops)ctx.gradientManager?.get(name)?.addColorStop(...stop);ctx.gradientManager.stops=[];return this.success()}});